# Generated by Django 5.1.2 on 2025-10-12 00:34

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dependencia',
            fields=[
                ('prefijo', models.CharField(help_text='Código numérico único de la dependencia (hasta 10 dígitos)', max_length=10, primary_key=True, serialize=False, unique=True, verbose_name='Prefijo Numérico')),
                ('nombre_oficina', models.CharField(max_length=200, verbose_name='Nombre de la Oficina')),
                ('ciudad', models.CharField(help_text='Ciudad donde se ubica la dependencia', max_length=100, verbose_name='Ciudad')),
                ('activa', models.BooleanField(default=True, verbose_name='Dependencia Activa')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Dependencia',
                'verbose_name_plural': 'Dependencias',
                'ordering': ['nombre_oficina'],
            },
        ),
        migrations.CreateModel(
            name='Peticion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('radicado', models.CharField(editable=False, max_length=20, unique=True)),
                ('fecha_radicacion', models.DateTimeField(help_text='Fecha y hora de radicación del derecho de petición', verbose_name='Fecha de Radicación')),
                ('peticionario_nombre', models.CharField(blank=True, max_length=200, null=True)),
                ('peticionario_id', models.CharField(blank=True, max_length=20, null=True)),
                ('peticionario_telefono', models.CharField(blank=True, max_length=15, null=True)),
                ('peticionario_correo', models.EmailField(blank=True, max_length=254, null=True)),
                ('peticionario_direccion', models.TextField(blank=True, null=True)),
                ('archivo_pdf', models.FileField(help_text='Archivo PDF del derecho de petición', upload_to='peticiones/')),
                ('transcripcion_completa', models.TextField(blank=True, help_text='Transcripción completa del documento extraída por IA')),
                ('estado', models.CharField(choices=[('sin_responder', 'Sin Responder'), ('respondido', 'Respondido')], default='sin_responder', max_length=20)),
                ('fuente', models.CharField(choices=[('gestion_documental', 'Gestión Documental'), ('correo_electronico', 'Correo Electrónico'), ('presencial', 'Presencial')], max_length=20)),
                ('archivo_respuesta_firmada', models.FileField(blank=True, help_text='Respuesta firmada', null=True, upload_to='respuestas_firmadas/')),
                ('archivo_constancia_envio', models.FileField(blank=True, help_text='Constancia de envío', null=True, upload_to='constancias_envio/')),
                ('fecha_respuesta', models.DateTimeField(blank=True, help_text='Fecha en que se marcó como respondido', null=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Derecho de Petición',
                'verbose_name_plural': 'Derechos de Petición',
                'ordering': ['-fecha_radicacion'],
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('cedula', models.CharField(help_text='Número de identificación del servidor público', max_length=20, primary_key=True, serialize=False, unique=True, verbose_name='Número de Cédula')),
                ('nombre_completo', models.CharField(max_length=200, verbose_name='Nombre Completo')),
                ('cargo', models.CharField(max_length=200, verbose_name='Cargo')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo Electrónico')),
                ('telefono', models.CharField(blank=True, max_length=15, null=True, verbose_name='Teléfono')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('debe_cambiar_contrasena', models.BooleanField(default=True, help_text='Indica si el usuario debe cambiar su contraseña en el próximo login', verbose_name='Debe Cambiar Contraseña')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('dependencia', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usuarios', to='peticiones.dependencia', verbose_name='Dependencia')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['nombre_completo'],
            },
        ),
        migrations.CreateModel(
            name='ProcesamientoIA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_procesamiento', models.DateTimeField(auto_now_add=True)),
                ('tiempo_procesamiento', models.FloatField(help_text='Tiempo en segundos')),
                ('modelo_ia_usado', models.CharField(default='gemini-1.5-flash', max_length=50)),
                ('estado_procesamiento', models.CharField(choices=[('exitoso', 'Exitoso'), ('error', 'Error'), ('pendiente', 'Pendiente')], default='pendiente', max_length=20)),
                ('mensaje_error', models.TextField(blank=True, null=True)),
                ('peticion', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='procesamiento_ia', to='peticiones.peticion')),
            ],
        ),
        migrations.CreateModel(
            name='RespuestaPeticion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenido_respuesta', models.TextField()),
                ('fecha_respuesta', models.DateTimeField(auto_now_add=True)),
                ('funcionario_responsable', models.CharField(max_length=200)),
                ('archivo_respuesta', models.FileField(blank=True, null=True, upload_to='respuestas/')),
                ('peticion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respuestas', to='peticiones.peticion')),
            ],
            options={
                'ordering': ['-fecha_respuesta'],
            },
        ),
    ]
